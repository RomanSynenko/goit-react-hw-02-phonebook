{"version":3,"sources":["Components/Filter/Filter.module.scss","Components/ContainerStyle.module.scss","Components/ContactForm/Form.module.scss","Components/ContactForm/ContactForm.js","Components/ContatctList/ContatctList.js","Components/Filter/Filter.js","Components/App.js","index.js","Components/ContatctList/List.module.scss"],"names":["module","exports","INITIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validationForm","id","uuid","resetForm","onCheckUnique","alert","this","className","s","title","contact_form","onSubmit","contact_input","type","placeholder","onChange","Component","ContactListItem","onRemove","Number","contact_item","contact_name","delete_button","onClick","ContactList","contacts","length","contact_list","map","contact","Filter","filter","search_block","App","onAddContact","newContact","handelCheskUniqueContact","isExistContact","find","handleRemoveContact","handelFilter","getVisibleContacts","toLowerCase","includes","visibleContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fc10db7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__21DuS\",\"contact_input\":\"Filter_contact_input__3mrr1\",\"search_block\":\"Filter_search_block__2np_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContainerStyle_container__29SzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Form_title__3NbAF\",\"contact_form\":\"Form_contact_form__n2Wti\",\"contact_input\":\"Form_contact_input__39-kE\"};","import React, { Component } from 'react';\n\nimport { v4 as uuid } from 'uuid';\n\nimport s from './Form.module.scss'\nconst INITIAL_STATE = {\n    name: '',\n    phone: '',\n}\nclass ContactForm extends Component {\n    state = {\n        ...INITIAL_STATE\n    }\n    handleChangeForm = ({ target }) => {\n        const { name, value } = target;\n        this.setState({ [name]: value });\n    }\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        const { name, phone } = this.state;\n        const { onAdd } = this.props;\n        const isValidationForm = this.validationForm();\n        if (!isValidationForm) return\n        onAdd({ id: uuid(), name, phone });\n        this.resetForm();\n    }\n    validationForm = () => {\n        const { name, phone } = this.state;\n        const { onCheckUnique } = this.props;\n        if (!name || !phone) {\n            alert('Some field is empty');\n            return false;\n        }\n        return onCheckUnique(name);\n    }\n    resetForm = () => this.setState(INITIAL_STATE)\n    render() {\n        const { name, phone } = this.state;\n        return (\n            <>\n                <h2 className={s.title}>Contact Form</h2>\n                <form className={s.contact_form} onSubmit={this.handleFormSubmit}>\n                    <input className={s.contact_input} type=\"text\" name='name' placeholder='Enter name' value={name} onChange={this.handleChangeForm} />\n                    <input className={s.contact_input} type=\"tel\" name='phone' placeholder='Enter phone number' value={phone} onChange={this.handleChangeForm} />\n                    <button className={s.contact_input} type='submit'>Add contact</button>\n                </form>\n            </>\n        )\n    }\n};\n\nexport default ContactForm;","import s from './List.module.scss';\nimport PropTypes, { number } from 'prop-types'\n\n\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\n    if (phone !== Number) return null\n    return (\n        <li className={s.contact_item}>\n            <p className={s.contact_name}>{name} </p> :\n            <p>{phone}</p>\n            <button className={s.delete_button} onClick={() => onRemove(id)}>Delete</button>\n        </li>\n    )\n};\nconst ContactList = ({ contacts, onRemove }) => {\n    if (contacts.length === 0) return null\n\n    return (\n        <ul className={s.contact_list}>\n            {\n                contacts.map((contact) => <ContactListItem key={contact} {...contact} onRemove={onRemove} />)\n            }\n        </ul>\n    )\n}\nContactListItem.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.number.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\nexport default ContactList;","import s from './Filter.module.scss';\nimport PropTypes from 'prop-types';\nconst Filter = ({ filter, onChange }) => {\n    return (\n        <div className={s.search_block}>\n            <h2 className={s.title}>Contacts list</h2>\n            <input\n                className={s.contact_input}\n                type=\"text\"\n                name='filter'\n                value={filter}\n                onChange={({ target }) => onChange(target.value)}\n                placeholder='Enter name for your Search'\n            />\n        </div>\n    )\n}\nFilter.propTypes = {\n    filter: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\nexport default Filter;","import React, { Component } from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\n\nimport s from './ContainerStyle.module.scss';\nimport ContactList from \"./ContatctList/ContatctList\";\nimport Filter from \"./Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  }\n  onAddContact = (newContact) => this.setState(\n    ({ contacts }) => ({ contacts: [...contacts, newContact] })\n  )\n  handelCheskUniqueContact = (name) => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find((contact) => contact.name === name);\n    isExistContact && alert('This contact is already exist');\n    return !isExistContact\n  }\n  handleRemoveContact = (id) => {\n    this.setState(({ contacts }) => ({ contacts: contacts.filter((contact) => contact.id !== id) }))\n  }\n  handelFilter = (filter) => this.setState({ filter });\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className={s.container}>\n        <ContactForm onAdd={this.onAddContact} onCheckUnique={this.handelCheskUniqueContact} />\n        <Filter filter={filter} onChange={this.handelFilter} />\n        <ContactList contacts={visibleContacts} onRemove={this.handleRemoveContact} />\n      </div>\n    )\n  };\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"List_contact_list__3d9ss\",\"delete_button\":\"List_delete_button__1Fy4K\",\"contact_item\":\"List_contact_item__11C51\",\"contact_name\":\"List_contact_name__J7qw0\"};"],"sourceRoot":""}